<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cli on cekrem.github.io</title><link>https://cekrem.github.io/tags/cli/</link><description>Recent content in cli on cekrem.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring UIs in the terminal part 2: React/Ink and Redux</title><link>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-2/</link><pubDate>Tue, 12 Sep 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-2/</guid><description>Abandon ship, all y&amp;rsquo;all In part 1, I made a small POC cli tool for doing multiple things in parallel. Like curling multiple endpoints and collecting the responses in a neat and tidy list instead of opening several terminal tabs/panes. The goal was partly to explore how rendering actually works in a more confined environment than the DOM (web), or more complicated yet: native mobile apps. The other goal, as usual, was to have fun while doing it.</description></item><item><title>Exploring UIs in the terminal part 1: React/Ink</title><link>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-1/</link><pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-1/</guid><description>Where do UIs belong? Most of us consider ReactJS a tool for rendering UI components on the web (or the DOM, specifically), and if by &amp;ldquo;React&amp;rdquo; we mean &amp;ldquo;ReactDOM&amp;rdquo; then we&amp;rsquo;re right. But as we&amp;rsquo;ve seen with React Native, React is not confined to the DOM at all, and can render to any number of environments. After all, like it says on the box, React is a &amp;ldquo;JavaScript library for building user interfaces&amp;rdquo;.</description></item><item><title>ripnote – the fastest and fuzziest way for a developer to take notes</title><link>https://cekrem.github.io/posts/ripnote/</link><pubDate>Mon, 15 Aug 2022 13:35:45 +0200</pubDate><guid>https://cekrem.github.io/posts/ripnote/</guid><description>The best tool for note-taking? The one you have close at hand. ReMarkable this, vintage inherited bio-dynamic paper that – it&amp;rsquo;ll do you no good what-so-ever if it&amp;rsquo;s not readily available when you need it. I&amp;rsquo;ve spent way too much time trying to find the &amp;ldquo;ideal&amp;rdquo; solution for keeping track of notes and ideas through my workday. But all I really need is this:
To jot down new notes and ideas fast!</description></item><item><title>create-elm-live-app – the smallest npm package ever?</title><link>https://cekrem.github.io/posts/create-elm-live-app/</link><pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/create-elm-live-app/</guid><description>The problem I&amp;rsquo;ve been tinkering a bit with Elm lately. The super-enforced functional and minimal paradigm is very refreshing, and serves as a sort of detox after spending one too many hour stuck in Android&amp;rsquo;s not-so-lovely XML + mutating class world. Setting up a new bare minimum Elm app should be quite simple, but it turns out that there are a few more steps required than one would expect. My first instinct – being a React guy – was to try yarn create elm-app (or npx create-elm-app), hoping it would do the Elm-equivalent of what create-react-app does.</description></item><item><title>pretty-git-report – a CLI to give you daily commit metrics</title><link>https://cekrem.github.io/posts/git-report/</link><pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/git-report/</guid><description>Have you ever&amp;hellip; Wanted to track your daily additions and deletions without leaving your beloved terminal? Busted your back piping git log {insert-hundred-flags} through endless hoops trying to create a somewhat human readable and useful output? Wanted to use a functional node.js cli with an immoral amount of Rambda usage? (Sorry about that, btw, I just wanted to see how far I could go. Quite far, it turns out!) Wished you would live to see a tool (any tool at all) that treverses a directory tree - :O – concurrently?</description></item></channel></rss>