<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Css on cekrem.github.io</title><link>https://cekrem.github.io/tags/css/</link><description>Recent content in Css on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducing `content-visibility: auto` - A Hidden Performance Gem</title><link>https://cekrem.github.io/posts/content-visibility-auto-performance/</link><pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/content-visibility-auto-performance/</guid><description>&lt;h2 id="introduction"&gt;
 Introduction
 &lt;a class="heading-link" href="#introduction"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;When dealing with large lists or complex DOM structures, performance optimization often feels like a complex puzzle. But sometimes, the simplest solutions are the most effective. Enter &lt;code&gt;content-visibility: auto&lt;/code&gt; - a CSS property that can dramatically improve rendering performance with minimal effort.&lt;/p&gt;
&lt;p&gt;You can (and IMHO should) read all about it &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility" class="external-link" target="_blank" rel="noopener"&gt;here&lt;/a&gt;! ðŸ¤“&lt;/p&gt;
&lt;h2 id="the-magic-of-content-visibility-auto"&gt;
 The Magic of content-visibility: auto
 &lt;a class="heading-link" href="#the-magic-of-content-visibility-auto"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;content-visibility: auto&lt;/code&gt; tells the browser to skip rendering elements that are not currently visible in the viewport. It&amp;rsquo;s like having a virtual scroll implementation, but without the complexity of managing scroll positions or item heights manually.&lt;/p&gt;</description></item></channel></rss>