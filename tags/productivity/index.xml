<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Productivity on cekrem.github.io</title><link>https://cekrem.github.io/tags/productivity/</link><description>Recent content in Productivity on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 17 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>The One Book (Besides The Bible) I Want My Future Manager to Read</title><link>https://cekrem.github.io/posts/the-one-book-i-want-my-future-manager-to-read/</link><pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/the-one-book-i-want-my-future-manager-to-read/</guid><description>&lt;p>Following up on my &lt;a href="https://cekrem.github.io/posts/books-i-think-software-engineers-should-read">previous post about books software engineers should read&lt;/a>, I want to highlight one particular book that I believe could revolutionize how we approach work in software development: Cal Newport&amp;rsquo;s &lt;a href="https://amzn.to/4ag23Zy">&amp;ldquo;Slow Productivity: The Lost Art of Accomplishment Without Burnout&amp;rdquo;&lt;/a>.&lt;/p>
&lt;h2 id="why-this-book">Why This Book?&lt;/h2>
&lt;p>In an industry obsessed with &amp;ldquo;moving fast and breaking things,&amp;rdquo; where sprint velocities and story points often overshadow actual value delivery, Newport&amp;rsquo;s concept of Slow Productivity feels like a breath of fresh air. The book presents three core principles that I believe could transform how we approach software development:&lt;/p></description></item></channel></rss>