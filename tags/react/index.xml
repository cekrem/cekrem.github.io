<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on cekrem.github.io</title><link>https://cekrem.github.io/tags/react/</link><description>Recent content in React on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 28 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/react/index.xml" rel="self" type="application/rss+xml"/><item><title>Open-Closed Principle in React: Building Extensible Components</title><link>https://cekrem.github.io/posts/open-closed-principle-in-react/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/open-closed-principle-in-react/</guid><description>&lt;h2 id="introduction">
 Introduction
 &lt;a class="heading-link" href="#introduction">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>After exploring &lt;a href="https://cekrem.github.io/posts/clean-architecture-and-plugins-in-go" >Dependency Inversion&lt;/a>, &lt;a href="https://cekrem.github.io/posts/interface-segregation-in-practice" >Interface Segregation&lt;/a>, and &lt;a href="https://cekrem.github.io/posts/liskov-substitution-the-real-meaning-of-inheritance" >Liskov Substitution&lt;/a>, let&amp;rsquo;s tackle the Open-Closed Principle (OCP) in the context of modern React applications.&lt;/p>
&lt;p>Again, kudos to Uncle Bob for reminding me about the importance of good &lt;strong>software architecture&lt;/strong> in his classic &lt;a href="https://amzn.to/4iAc8o1" class="external-link" target="_blank" rel="noopener">Clean Architecture&lt;/a>! That book is my primary inspiration for this series.&lt;/p>
&lt;blockquote>
&lt;p>The Open-Closed Principle states that software entities should be open for extension but closed for modification.&lt;/p></description></item><item><title>Math test for staying home with semi-sick kids</title><link>https://cekrem.github.io/posts/math-test-for-home-schooling/</link><pubDate>Wed, 23 Oct 2024 13:35:45 +0200</pubDate><guid>https://cekrem.github.io/posts/math-test-for-home-schooling/</guid><description>&lt;h2 id="sick-kid-but-not-_that_-sick">
 Sick kid, but not &lt;em>that&lt;/em> sick?
 &lt;a class="heading-link" href="#sick-kid-but-not-_that_-sick">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>The other day I was home with my oldest daughter. She had a slight cold and an Almost-Fever™, which is usually not enough to skip school by my standards, but this particular day was an outdoors day with a lot of straining physical activity. So, against my potential better judgment I let her stay home, but warned her that it wouldn&amp;rsquo;t be quite a spa – some chores and a little school work was to be expected. She gladly accepted my terms, well-raised and polite as she indeed is.&lt;/p></description></item><item><title>Exploring UIs in the terminal part 2: More ink!</title><link>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-2/</link><pubDate>Tue, 12 Sep 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-2/</guid><description>&lt;h2 id="abandon-ship-all-yall">
 Abandon ship, all y&amp;rsquo;all
 &lt;a class="heading-link" href="#abandon-ship-all-yall">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>In &lt;a href="https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-1" >part 1&lt;/a>, I made a small POC cli tool for doing multiple things in parallel. Like curling multiple endpoints and collecting the responses in a neat and tidy list instead of opening several terminal tabs/panes. The goal was partly to explore how rendering actually works in a more confined environment than the DOM (web), or more complicated yet: native mobile apps. The other goal, as usual, was to have fun while doing it. My adventures in part 2 have, however, been slightly shipwrecked.&lt;/p></description></item><item><title>Exploring UIs in the terminal part 1: React/Ink</title><link>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-1/</link><pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/do-more-stuff-cli-tool-part-1/</guid><description>&lt;h2 id="where-do-uis-belong">
 Where do UIs belong?
 &lt;a class="heading-link" href="#where-do-uis-belong">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Most of us consider ReactJS a tool for rendering UI components on the web (or the DOM, specifically), and if by &amp;ldquo;React&amp;rdquo; we mean &amp;ldquo;ReactDOM&amp;rdquo; then we&amp;rsquo;re right. But as we&amp;rsquo;ve seen with React Native, React is not confined to the DOM at all, and can render to any number of environments. After all, like it says on the box, React is a &amp;ldquo;JavaScript library for building user interfaces&amp;rdquo;. We&amp;rsquo;ve seen the same with &lt;a href="https://www.jetbrains.com/lp/compose-multiplatform/" class="external-link" target="_blank" rel="noopener">Compose Multiplatform&lt;/a>: what used to be a framework for creating Android UI can actually be used for so much more.&lt;/p></description></item><item><title>Changing Jobs Without Leaving Your Company</title><link>https://cekrem.github.io/posts/changing-jobs-without-leaving-your-company/</link><pubDate>Tue, 21 Jun 2022 07:00:15 +0200</pubDate><guid>https://cekrem.github.io/posts/changing-jobs-without-leaving-your-company/</guid><description>&lt;p>So you&amp;rsquo;ve been at your company for a couple of years. Your parents tell you to stick around for another five, but other people in tech - and your adventurous self - tell you it&amp;rsquo;s about time to learn something new. What if you could do both? The most common path to take in order to learn something new, advance your career, increase your salary or simply Change Things Up A Bit involves leaving your company for something else. This is especially true in tech. (Sadly, the salary part is &lt;em>especially&lt;/em> true in tech; to the point where just about the only way to get a raise is to &lt;em>say&lt;/em> that you&amp;rsquo;re leaving for a better deal, and either take the deal or the inevitable counter-offer from your current workplace. Not cool.)&lt;/p></description></item><item><title>React Advent Calendar – keto vegan, gluten free and no parabens or plastic wrapping</title><link>https://cekrem.github.io/posts/react-advent-calendar/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/react-advent-calendar/</guid><description>&lt;h1 id="tldr-i-made-an-advent-calendar-in-react-my-wife-loved-it">
 TL;DR: I made an advent calendar in React, my wife loved it
 &lt;a class="heading-link" href="#tldr-i-made-an-advent-calendar-in-react-my-wife-loved-it">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;p>I grew up with a lot of creative advent calendars. The one type I &lt;em>didn&amp;rsquo;t&lt;/em> get was the standard chocolate one that&amp;rsquo;s most common these days. While I&amp;rsquo;ve not consistently been very good at paying this forward, I do make an effort some years to do something a bit different for my wife. Yes, my wife; the kids get standard ones :P This year&amp;rsquo;s plan was simple: create an online calendar with cozy favors, encouragements and the like each day until Christmas. I had planned to spend exactly one evening on this - the last evening of November, to be precise. But, my wife&amp;rsquo;s plans for the evening evaporated as she decided she &amp;ldquo;really wanted to hang out with me at home&amp;rdquo; instead. Needless to say, I had to work quite fast.&lt;/p></description></item></channel></rss>