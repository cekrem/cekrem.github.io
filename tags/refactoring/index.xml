<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Refactoring on cekrem.github.io</title><link>https://cekrem.github.io/tags/refactoring/</link><description>Recent content in Refactoring on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 25 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/refactoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring Towards Cleaner Boundaries: Lessons from Building a Markdown Blog Engine (Part 3)</title><link>https://cekrem.github.io/posts/refactoring-towards-cleaner-boundaries/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/refactoring-towards-cleaner-boundaries/</guid><description>&lt;p&gt;In &lt;a href="https://cekrem.github.io/posts/replacing-hugo-with-kotlin-clean-architecture" &gt;part 1&lt;/a&gt;, we laid out our Clean Architecture vision. In &lt;a href="https://cekrem.github.io/posts/double-loop-tdd-blog-engine-pt2" &gt;part 2&lt;/a&gt;, we explored Double Loop TDD. Today, we dive into the &lt;strong&gt;refactoring journey&lt;/strong&gt; that emerged from implementing these principles.&lt;/p&gt;
&lt;p&gt;The source code at the time of writing is &lt;a href="https://github.com/cekrem/clean-blog/tree/v0.3" class="external-link" target="_blank" rel="noopener"&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="the-controller-conundrum"&gt;
 The Controller Conundrum
 &lt;a class="heading-link" href="#the-controller-conundrum"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;One of the most significant architectural changes in this iteration was moving the &lt;code&gt;ContentController&lt;/code&gt; from the infrastructure layer to the &lt;strong&gt;interface adapters layer&lt;/strong&gt;. This shift better aligns with Clean Architecture principles:&lt;/p&gt;</description></item></channel></rss>