<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vipps on cekrem.github.io</title><link>https://cekrem.github.io/tags/vipps/</link><description>Recent content in Vipps on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 31 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cekrem.github.io/tags/vipps/index.xml" rel="self" type="application/rss+xml"/><item><title>A Use Case for `UseCase`s in Kotlin</title><link>https://cekrem.github.io/posts/a-use-case-for-usecases-in-kotlin/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/a-use-case-for-usecases-in-kotlin/</guid><description>&lt;h2 id="my-first-encounter-with-a-kotlin-usecase"&gt;
 My First Encounter with a Kotlin &lt;code&gt;UseCase&lt;/code&gt;
 &lt;a class="heading-link" href="#my-first-encounter-with-a-kotlin-usecase"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;One of my responsibilities as an Android Developer in Vipps (Mobilepay) was to do tech interviews. After a while, I also made the tech assignments and changed the recruitment process a bit. But in the earlier days, we used a standard &amp;ldquo;build X using Y&amp;rdquo;, where &amp;ldquo;Y&amp;rdquo; was modern Android tools (preferably Compose), and &amp;ldquo;X&amp;rdquo; was some non-descript hello world-ish app that did something I can&amp;rsquo;t for the life of me remember. During one of the tech task evaluations we did prior to an interview, I encountered a strange animal completely unknown to me. A &lt;code&gt;UseCase&lt;/code&gt; class, with an &lt;code&gt;operator fun invoke()&lt;/code&gt; method.&lt;/p&gt;</description></item><item><title>The End of an Era!</title><link>https://cekrem.github.io/posts/the-end-of-an-era/</link><pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/the-end-of-an-era/</guid><description>&lt;p&gt;&lt;strong&gt;Update: &lt;a href="https://cekrem.github.io/posts/back-to-the-old-gym" &gt;Here&lt;/a&gt;&amp;rsquo;s the next development plan, kind of.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Day Has Come. I&amp;rsquo;m officially archiving my previous &lt;a href="https://cekrem.github.io/posts/devplan" &gt;development plan&lt;/a&gt; and moving on to new adventures in Vipps Mobile Pay! It&amp;rsquo;s been a long time coming, and I&amp;rsquo;m happy to say that I&amp;rsquo;ve achieved most of the goals I set out to achieve. I&amp;rsquo;ve learned a lot, and I&amp;rsquo;m ready to proceed towards the next chapter. I&amp;rsquo;m not, however, ready to make a new plan just yet. So consider this post ceremonial more than anything.&lt;/p&gt;</description></item><item><title>Development plan 2021-2023</title><link>https://cekrem.github.io/posts/devplan/</link><pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate><guid>https://cekrem.github.io/posts/devplan/</guid><description>&lt;p&gt;&lt;strong&gt;Update: This plan is now archived. See &lt;a href="https://cekrem.github.io/posts/the-end-of-an-era" &gt;The End of an Era&lt;/a&gt; for details.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What follows is my own personal development plan as a software engineer at
&lt;del&gt;&lt;a href="https://vipps.io" class="external-link" target="_blank" rel="noopener"&gt;Vipps&lt;/a&gt;&lt;/del&gt; &lt;a href="https://vippsmobilepay.com" class="external-link" target="_blank" rel="noopener"&gt;Vipps MobilePay&lt;/a&gt;. Some terms and
expressions are a bit internal, as they will no doubt be for you as well on your own plan (should you find yourself
inspired to write one), but I&amp;rsquo;ll leave it as is. Enjoy!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="context"&gt;
 Context
 &lt;a class="heading-link" href="#context"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been at &lt;a href="https://vippsmobilepay.com" class="external-link" target="_blank" rel="noopener"&gt;Vipps MobilePay&lt;/a&gt; since 2018, mostly doing work that now belongs in the &amp;ldquo;Merchant Core&amp;rdquo; team. I
created a few small backend services from scratch (a very fun QR code generator, to name one), deprecated a few others (
let&amp;rsquo;s not name those ever again&amp;hellip;), helped kick off the Vipps Design System and most significantly worked on the Vipps
Merchant Portal and on automating merchant signup, risk analysis and onboarding. I&amp;rsquo;ve hosted a Vipps Community Of
Practice plainly called &amp;ldquo;Side Projects And Experiments&amp;rdquo; (SPÆ) where I&amp;rsquo;ve touched on quite a lot of exciting tech and
tried a few non-mainstream programming languages. Still 90% of my &amp;ldquo;real&amp;rdquo; work has been with Golang and React. And
lot&amp;rsquo;s(!) of complex SQL. &lt;a href="https://cekrem.github.io/posts/changing-jobs-without-leaving-your-company" &gt;In mid 2020, I decided to expand my horizon and challenge myself by doing something completely
other&lt;/a&gt;; I learned Kotlin during my summer holidays, and joined the
Android app to learn from Norway&amp;rsquo;s best app
developers. So the Android team is where I&amp;rsquo;m at now; the ~~
eCom~~ Recurring Payments and Vipps Login subteams more
specifically.&lt;/p&gt;</description></item><item><title>Changing Jobs Without Leaving Your Company</title><link>https://cekrem.github.io/posts/changing-jobs-without-leaving-your-company/</link><pubDate>Tue, 21 Jun 2022 07:00:15 +0200</pubDate><guid>https://cekrem.github.io/posts/changing-jobs-without-leaving-your-company/</guid><description>&lt;p&gt;So you&amp;rsquo;ve been at your company for a couple of years. Your parents tell you to stick around for another five, but other people in tech - and your adventurous self - tell you it&amp;rsquo;s about time to learn something new. What if you could do both? The most common path to take in order to learn something new, advance your career, increase your salary or simply Change Things Up A Bit involves leaving your company for something else. This is especially true in tech. (Sadly, the salary part is &lt;em&gt;especially&lt;/em&gt; true in tech; to the point where just about the only way to get a raise is to &lt;em&gt;say&lt;/em&gt; that you&amp;rsquo;re leaving for a better deal, and either take the deal or the inevitable counter-offer from your current workplace. Not cool.)&lt;/p&gt;</description></item><item><title>Reducing Android Build Times on Azure by 80% using a Virtual Machine Scale Set (VMSS)</title><link>https://cekrem.github.io/posts/reducing-android-build-times-on-azure-by-80/</link><pubDate>Wed, 04 May 2022 12:00:21 +0200</pubDate><guid>https://cekrem.github.io/posts/reducing-android-build-times-on-azure-by-80/</guid><description>&lt;blockquote&gt;
&lt;p&gt;A VMSS is, put as plainly as possible, a cluster of VMs that are scaled on-demand or manually.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="context"&gt;
 Context
 &lt;a class="heading-link" href="#context"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://play.google.com/store/apps/details?id=no.dnb.vipps&amp;amp;hl=no&amp;amp;gl=US" class="external-link" target="_blank" rel="noopener"&gt;Vipps App&lt;/a&gt; – until recently – took about 45 minutes to build on &lt;del&gt;A$ure&lt;/del&gt; Azure. With a weekly release schedule, that might not sound like a huge dealbreaker, but since we&amp;rsquo;re using a &amp;ldquo;feature branch&amp;rdquo; approach to how we do &lt;code&gt;git&lt;/code&gt; (ie no &lt;code&gt;develop&lt;/code&gt; branch; &lt;code&gt;master&lt;/code&gt; should always be deployable-ish), we don&amp;rsquo;t allow merging &lt;em&gt;anything&lt;/em&gt; to &lt;code&gt;master&lt;/code&gt; without a successful cloud build. Waiting for code review is hard to avoid, but additionally waiting for slow builds is just wrong. It&amp;rsquo;s not easy for our internal testers to check out what we&amp;rsquo;re doing either, they &lt;em&gt;too&lt;/em&gt; are kept waiting. Suffice to say, the pain has been real. Personally, coming from a Golang background (where builds happen at the speed of your monitor&amp;rsquo;s refresh rate), this kind of wrecked my soul on a daily basis. Granted, Android builds are more complicated (I&amp;rsquo;m looking at you, Java ecosystem!) than single-binary Golang builds, but 40+ minutes for one app build is too slow nonetheless.&lt;/p&gt;</description></item></channel></rss>