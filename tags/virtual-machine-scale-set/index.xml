<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Virtual Machine Scale Set on cekrem.github.io</title><link>https://cekrem.github.io/tags/virtual-machine-scale-set/</link><description>Recent content in Virtual Machine Scale Set on cekrem.github.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 04 May 2022 12:00:21 +0200</lastBuildDate><atom:link href="https://cekrem.github.io/tags/virtual-machine-scale-set/index.xml" rel="self" type="application/rss+xml"/><item><title>Reducing Android Build Times on Azure by 80% using a Virtual Machine Scale Set (VMSS)</title><link>https://cekrem.github.io/posts/reducing-android-build-times-on-azure-by-80/</link><pubDate>Wed, 04 May 2022 12:00:21 +0200</pubDate><guid>https://cekrem.github.io/posts/reducing-android-build-times-on-azure-by-80/</guid><description>&lt;blockquote>
&lt;p>A VMSS is, put as plainly as possible, a cluster of VMs that are scaled on-demand or manually.&lt;/p>&lt;/blockquote>
&lt;h2 id="context">
 Context
 &lt;a class="heading-link" href="#context">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>The &lt;a href="https://play.google.com/store/apps/details?id=no.dnb.vipps&amp;amp;hl=no&amp;amp;gl=US" class="external-link" target="_blank" rel="noopener">Vipps App&lt;/a> – until recently – took about 45 minutes to build on &lt;del>A$ure&lt;/del> Azure. With a weekly release schedule, that might not sound like a huge dealbreaker, but since we&amp;rsquo;re using a &amp;ldquo;feature branch&amp;rdquo; approach to how we do &lt;code>git&lt;/code> (ie no &lt;code>develop&lt;/code> branch; &lt;code>master&lt;/code> should always be deployable-ish), we don&amp;rsquo;t allow merging &lt;em>anything&lt;/em> to &lt;code>master&lt;/code> without a successful cloud build. Waiting for code review is hard to avoid, but additionally waiting for slow builds is just wrong. It&amp;rsquo;s not easy for our internal testers to check out what we&amp;rsquo;re doing either, they &lt;em>too&lt;/em> are kept waiting. Suffice to say, the pain has been real. Personally, coming from a Golang background (where builds happen at the speed of your monitor&amp;rsquo;s refresh rate), this kind of wrecked my soul on a daily basis. Granted, Android builds are more complicated (I&amp;rsquo;m looking at you, Java ecosystem!) than single-binary Golang builds, but 40+ minutes for one app build is too slow nonetheless.&lt;/p></description></item></channel></rss>